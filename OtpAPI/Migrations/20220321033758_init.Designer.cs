// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtpAPI.OtpAPI.Data;

namespace OtpAPI.Migrations
{
    [DbContext(typeof(OtpApiDbContext))]
    [Migration("20220321033758_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("OtpAPI.OtpAPI.Models.Otp", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtpCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtpCounter")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtpUserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OtpUserId");

                    b.ToTable("Otps");
                });

            modelBuilder.Entity("OtpAPI.OtpAPI.Models.OtpUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OtpUsers");
                });

            modelBuilder.Entity("OtpAPI.OtpAPI.Models.Otp", b =>
                {
                    b.HasOne("OtpAPI.OtpAPI.Models.OtpUser", "OtpUser")
                        .WithMany()
                        .HasForeignKey("OtpUserId");

                    b.Navigation("OtpUser");
                });
#pragma warning restore 612, 618
        }
    }
}
